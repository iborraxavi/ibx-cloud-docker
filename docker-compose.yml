version: '3.8'

networks:
  default-network:
    driver: bridge

volumes:
  mongo-db-data:
  keycloak_data:

services:
  mongodb:
    container_name: mongodb
    image: mongo
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - '27017:27017'
    volumes:
      - mongo-db-data:/data/db
    networks:
      - default-network

  keycloak:
    image: quay.io/keycloak/keycloak:19.0.2
    restart: on-failure
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8081:8081"
    volumes:
      - keycloak_data:/data
      - ./keycloak/providers:/opt/jboss/keycloak/providers
      - ./keycloak/standalone/configuration:/opt/jboss/keycloak/standalone/configuration
    entrypoint: ["/opt/keycloak/bin/kc.sh", "start-dev"]

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8091:8091
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  ibx-cloud-config-server:
    container_name: ibx-cloud-config-server
    image: xaviiborra/ibx-cloud-config-server
    restart: on-failure
    # env_file: ./.env
    ports:
      - 8888:8888
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.profiles.active": "dev"
      }'
    networks:
      - default-network

  ibx-cloud-eureka:
    container_name: ibx-cloud-eureka
    depends_on:
      - ibx-cloud-config-server
    image: xaviiborra/ibx-cloud-eureka
    restart: on-failure
    # env_file: ./.env
    ports:
      - 8761:8761
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.profiles.active": "dev"
      }'
    networks:
      - default-network

  ibx-cloud-gateway:
    container_name: ibx-cloud-gateway
    depends_on:
      - ibx-cloud-config-server
      - ibx-cloud-eureka
    image: xaviiborra/ibx-cloud-gateway
    restart: on-failure
    # env_file: ./.env
    ports:
      - 8080:8080
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.profiles.active": "dev"
      }'
    networks:
      - default-network

  ibx-cloud-account:
    container_name: ibx-cloud-account
    depends_on:
      - mongodb
      - ibx-cloud-config-server
      - ibx-cloud-eureka
    image: xaviiborra/ibx-cloud-account
    restart: on-failure
    # env_file: ./.env
    ports:
      - 9100:9100
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.profiles.active": "dev"
      }'
    networks:
      - default-network